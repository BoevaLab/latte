"""
Code for generating and working with synthetic data used for evaluating the approaches implemented in the `latte`
library.
The `generate` function generates an observable dataset based on an embedded nonlinear manifold.
"""

from typing import Callable, List
import dataclasses

import numpy as np
import geoopt

from latte.dataset.utils import RandomGenerator


@dataclasses.dataclass
class NonlinearManifoldDataset:
    """
    A synthetic dataset holding data generated by the `nonlinear_manifold` function.
    See function definition for more detailed documentation of the generated data.

    Members:
        X: A `N x n` matrix of the (noisy) observables
        A: The `n x d` projection matrix into the d-dimensional linear subspace
        Y: The `N x d` matrix of the projections of the observables into the d-dimensional linear subspace
        Z: The `N x m` matrix of the manifold coordinates of the observables
    """

    X: np.ndarray
    A: np.ndarray
    Y: np.ndarray
    Z: np.ndarray


def generate(
    N: int,
    n: int,
    d: int,
    fs: List[Callable[[np.ndarray], np.ndarray]],
    spread: float = 1,
    sigma: float = 0,
    rng: RandomGenerator = 42,
) -> NonlinearManifoldDataset:
    """
    Generate a synthetic dataset of n n-dimensional points (observations) X sampled from an isotropic Gaussian.
    The data actually live in a lower-dimensional nonlinear subspace/manifold M.
    M itself depends only on a (random) d-dimensional linear subspace (characterised by a `d x n` projection matrix)
    and is defined by the functions `fs` which map the d-dimensional subspace into the true subspace,
    e.g., a 1D curve or a 2D surface which depends on the d dimensions of the subspace.
    In general, this true space will have dimension m := len(fs).

    We assume we only have access to the n-dimensional observations, while the d-dimensional subspace and the
    true m-dimensional space (and the projections of the observations on them) are unknown.
    A small subset of the true projection values can be used to try to find these subspaces, and then to evaluate the
    quality of the fit.

    Args:
        N: Number of samples to generate.
        n: The dimension of the observable space.
        d: The dimension of the linear subspace on which the manifold M depends.
        fs: The list of functions mapping from the d-dimensional linear subspace into M.
        spread: The standard deviation of the Gaussian used to generate the observations.
        sigma: The standard deviation of the noise added to the observations
               to make the discovery of the subspace harder.
        rng: The random number generator for the dataset.
    Returns:
        A SyntheticDataset object
    """

    rng = np.random.default_rng(rng)

    X = rng.normal(scale=spread, size=(N, n)).astype(np.float32)  # The true observations

    # The projection matrix of the linear subspace
    A = geoopt.Stiefel().random(n, d).numpy().astype(np.float32)
    Y = X @ A  # The coordinates in the linear subspace

    # The true value of the factors of variation in the manifold M
    Z = np.asarray([f(Y) for f in fs]).T.astype(np.float32)

    X_noisy = X + rng.normal(0, sigma, size=(N, n)).astype(np.float32)  # Noisy observations

    return NonlinearManifoldDataset(X=X_noisy, A=A, Y=Y, Z=Z)
